;;*****************************************************************************
;;*****************************************************************************
;;  FILENAME: FlashTemp_1INT.asm
;;   Version: 2.0, Updated on 2003/08/19 at 20:44:15
;;  Generated by PSoC Designer ver 4.0 b865 : 27 August, 2003
;;
;;  DESCRIPTION:  FlashTemp Interrupt Service Routine
;;-----------------------------------------------------------------------------
;;  Copyright (c) Cypress MicroSystems 2000-2003. All Rights Reserved.
;;*****************************************************************************
;;*****************************************************************************

include "FlashTemp_1.inc"
include "m8c.inc"

;-----------------------------------------------
;  Global Symbols
;-----------------------------------------------
export  _FlashTemp_1_FlashTempInt
export   FlashTemp_1_bADCCounter
export   FlashTemp_1_iADCData

;-----------------------------------------------
; Variable Allocation
;-----------------------------------------------
area bss(RAM) 
    FlashTemp_1_iADCData:        BLK   2   ;Data accumulator
    FlashTemp_1_bADCCounter:     BLK   1   ;Counter for ADC duration

area UserModules(ROM,REL)

;-----------------------------------------------------------------------------
;  FUNCTION NAME: _FlashTemp_1_FlashTempInt
;
;  DESCRIPTION:
;    This routine collects data bSAMPLE_SIZE times.  To
;    collect data it reads the output of the comparator 
;    and increments a counter by iFlashTemp_1_GAIN
;    if the comparator output is a 1.  
;    When all 255 passes have been completed it disables
;    the interrupt and resets the integrating capacitor
;    and powers down the PSoC block.
;
;-----------------------------------------------------------------------------
;
;
;  THEORY of OPERATION:  
;   The temperature sensor output changes by about 0.3 counts per
;   degree C and has a large offset.  The goal for this routine is to
;   do all of the math as integer math during collection.  This will 
;   eliminate post collection processing.  A 16-bit signed integer 
;   variable is used to accumulate the data.  This variable is use as
;   a fixed point variable, with the upper byte as the integer portion
;   of the number and the lower byte as the fractional portion of the
;   number.  
;
;   This ISR is executed once per analog column clock.  Whenever the 
;   comparator output from the analog block is high, a fixed point
;   value (approximately 3.3) is added to the 16-bit variable.  
;
;   In addition the 16-bit signed integer variable is preloaded with
;   a value that compensates for the offset.
;
;   By using the correct offset and the correct fixed point incrementor,
;   after the 255 samples have been collected the upper byte of the
;   16-bit data accumulator contains the temperature in degrees Celsius.
;
;   After the ISR has been entered the 255th time, the interrupt is
;   disabled, the intergrating cap is reset and the PSoC Block is 
;   powered off.  ADCCounter will contain 00h and that will be used to
;   determine that the data collection is done.
;-----------------------------------------------------------------------
_FlashTemp_1_FlashTempInt:

  tst  reg[CMP_CR0],CMP_CR0_COMP1        ;if comp, high incr counter
  jz   CompIsLow

CompIsHi:
  add  [FlashTemp_1_iADCData+1],<FlashTemp_1_iGAIN
  adc  [FlashTemp_1_iADCData],>FlashTemp_1_iGAIN

CompIsLow:
  dec  [FlashTemp_1_bADCCounter]
  jnz  NotDoneYet

Done:
  and  reg[INT_MSK0],~FlashTemp_1_bfINT_MASK 
                                        ;disable the interrupt
  or   reg[FlashTemp_1_FlashTempCR2],FlashTemp_1_bfAUTO_ZERO
                                        ;reset the integrator
  mov reg[FlashTemp_1_FlashTempCR3],bfFLASHTEMP_CR3
                                        ;turn off the power

NotDoneYet:
  reti

FlashTemp_1_APIINT_END:

; end of file FlashTemp_1INT.asm

