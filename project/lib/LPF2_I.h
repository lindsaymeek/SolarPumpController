//*****************************************************************************
//*****************************************************************************
//  FILENAME: LPF2_I.h
//   Version: 2.0, Updated on 2003/08/28 at 13:31:00
//  Generated by PSoC Designer ver 4.0 b865 : 27 August, 2003
//
//  DESCRIPTION: C declarations for the LPF2 User Module.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress MicroSystems YYYY. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall LPF2_I_Start
#pragma fastcall LPF2_I_SetPower
#pragma fastcall LPF2_I_Stop
#pragma fastcall LPF2_I_SetC1
#pragma fastcall LPF2_I_SetC2
#pragma fastcall LPF2_I_SetC3
#pragma fastcall LPF2_I_SetC4
#pragma fastcall LPF2_I_SetCA
#pragma fastcall LPF2_I_SetCB


//-------------------------------------------------
// Prototypes of the LPF2_I API.
//-------------------------------------------------

extern void LPF2_I_Start(BYTE bPowerSetting);
extern void LPF2_I_SetPower(BYTE bPowerSetting);
extern void LPF2_I_Stop(void);
extern void LPF2_I_SetC1(BYTE bCapValue);
extern void LPF2_I_SetC2(BYTE bCapValue);
extern void LPF2_I_SetC3(BYTE bCapValue);
extern void LPF2_I_SetC4(BYTE bCapValue);
extern void LPF2_I_SetCA(BYTE bCapValue);
extern void LPF2_I_SetCB(BYTE bCapValue);


//-------------------------------------------------
// Defines for LPF2_I API's.
//-------------------------------------------------

#define LPF2_I_OFF                         (0x00)
#define LPF2_I_LOWPOWER                    (0x01)
#define LPF2_I_MEDPOWER                    (0x02)
#define LPF2_I_HIGHPOWER                   (0x03)

#define LPF2_I_FEEDBACK_16                 (0x00)
#define LPF2_I_FEEDBACK_32                 (0x01)

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

#pragma ioport  LPF2_I_FLIN_CR0:    0x09c                       //Analog SCA control register 0
BYTE            LPF2_I_FLIN_CR0;
#pragma ioport  LPF2_I_FLIN_CR1:    0x09d                       //Analog SCA control register 1
BYTE            LPF2_I_FLIN_CR1;
#pragma ioport  LPF2_I_FLIN_CR2:    0x09e                       //Analog SCA control register 2
BYTE            LPF2_I_FLIN_CR2;
#pragma ioport  LPF2_I_FLIN_CR3:    0x09f                       //Analog SCA control register 3
BYTE            LPF2_I_FLIN_CR3;
#pragma ioport  LPF2_I_FLOUT_CR0:   0x08c                      //Analog SCB control register 0
BYTE            LPF2_I_FLOUT_CR0;
#pragma ioport  LPF2_I_FLOUT_CR1:   0x08d                      //Analog SCB control register 1
BYTE            LPF2_I_FLOUT_CR1;
#pragma ioport  LPF2_I_FLOUT_CR2:   0x08e                      //Analog SCB control register 2
BYTE            LPF2_I_FLOUT_CR2;
#pragma ioport  LPF2_I_FLOUT_CR3:   0x08f                      //Analog SCB control register 3
BYTE            LPF2_I_FLOUT_CR3;

//  LPF2_I Cap naming convention per Gregorian and Temes, p293

#pragma ioport  LPF2_I_FILT_C1_REG: 0x09c
BYTE            LPF2_I_FILT_C1_REG;
#pragma ioport  LPF2_I_FILT_C2_REG: 0x09d
BYTE            LPF2_I_FILT_C2_REG;
#pragma ioport  LPF2_I_FILT_C3_REG: 0x08c
BYTE            LPF2_I_FILT_C3_REG;
#pragma ioport  LPF2_I_FILT_C4_REG: 0x09e
BYTE            LPF2_I_FILT_C4_REG;
#pragma ioport  LPF2_I_FILT_CA_REG: 0x09c
BYTE            LPF2_I_FILT_CA_REG;
#pragma ioport  LPF2_I_FILT_CB_REG: 0x08c
BYTE            LPF2_I_FILT_CB_REG;


// end of file LPF2_I.h
